# Question 16(a)
# Examination Number:

# function definition used in part (v)
def is_anagram(w1, w2):
    if sorted(w1) == sorted(w2):
        return True
    else:
        return False


word1 = input("Enter the first word: ")
word2 = input("Enter the second word: ") #(i) Input added for second word.

w1 = word1.upper() #(iv) made a new variable to use temporarily so it will output exactly what you input
w2 = word2.upper()
# test whether the sorted strings are the same as each other
# if the sorted strings are the same then they must be anagrams

if(sorted(w1) == sorted(w2)):
    print(word1, "is an anagram of", word2) #(ii) edited the text output
else:
    print(word1, "is NOT an anagram of", word2) #(iii) added a negative else statement
    
if is_anagram(w1, w2):
    print(word1, "is an anagram of", word2)
else:
    print(word1, "is NOT an anagram of", word2)

#(vi) checked if a special phrase is the same as word1 and word2
phrase = input("Enter a phrase: ")
phrase2 = phrase.replace(" ", "")
phraseList = sorted(phrase2.upper())
# rem = phrase.count(" ")
# for i in range (1, rem+1):
#     phraseList.remove(" ")


if phraseList == sorted(w1):
    print(word1, "is an anagram of", phrase)
else:
    print(word1, "is NOT an anagram of", phrase)
    
if phraseList == sorted(w2):
    print(word2, "is an anagram of", phrase)
else:
    print(word2, "is not an angram of", phrase)
